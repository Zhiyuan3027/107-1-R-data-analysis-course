#http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/81-ggplot2-easy-way-to-mix-multiple-graphs-on-the-same-page/
#if(!require(devtools)) install.packages("devtools")
#devtools::install_github("kassambara/ggpubr")
#use above two lines to install package
#failed
library(ggpubr)
graph <- vector()
for(i in 1:length(all.team.name)){
team.name <- all.team.name[i]
team.Data <- getData[getData[, "Team"] == team.name,]
graph[i] <- list(ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity" ) + ggtitle(team.name))
}
for(i in 1:length(all.team.name))
{
graph[i]
}
#uncompleted
library(ggplot2)
mydata = read.csv("lcs-2017-summer-split-fantasy-player-team-stats/LCS Players Stats Summer Split 2017.csv")
#turn numeric into character
mydata$Name = as.character(mydata$Name)
mydata$Team = as.character(mydata$Team)
#find the data which is not blank and store into getData
getnnonameID = which(nchar(mydata$Name) != 0)
getData = mydata[getnnonameID,]
#create a vector storing all team names
#https://stat.ethz.ch/R-manual/R-devel/library/base/html/append.html
#how to append value to vector (the website above)
all.team.name <- getData$Team[1]
i <- 2
repeat{
if( is.na(getData$Team[i]) ) break
if( !(getData$Team[i] %in% all.team.name) ) {
all.team.name <- append(all.team.name, getData$Team[i], length(all.team.name))
}
i <- i + 1
}
#plot the data of player in team (one by one)
#http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/81-ggplot2-easy-way-to-mix-multiple-graphs-on-the-same-page/
#if(!require(devtools)) install.packages("devtools")
#devtools::install_github("kassambara/ggpubr")
#use above two lines to install package
#failed
library(ggpubr)
graph <- vector()
for(i in 1:length(all.team.name)){
team.name <- all.team.name[i]
team.Data <- getData[getData[, "Team"] == team.name,]
graph[i] <- list(ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity" ) + ggtitle(team.name))
graph[i]
}
#if(!require(devtools)) install.packages("devtools")
#devtools::install_github("kassambara/ggpubr")
#use above two lines to install package
library(ggpubr)
graph <- vector()
for(i in 1:length(all.team.name)){
team.name <- all.team.name[i]
team.Data <- getData[getData[, "Team"] == team.name,]
ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity" ) + ggtitle(team.name)
}
#get the data of player in Cloud9
#https://stackoverflow.com/questions/5391124/select-rows-of-a-matrix-that-meet-a-condition
#how to extract rows that meet a condition (the website above)
team.name <- "TeamLiquid"
team.Data <- getData[getData[, "Team"] == team.name,]
#ggtitle("title_name") <- add title
ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity" ) + ggtitle(team.name)
View(getData)
#get the data of player in Cloud9
#https://stackoverflow.com/questions/5391124/select-rows-of-a-matrix-that-meet-a-condition
#how to extract rows that meet a condition (the website above)
team.name <- "Team Liquid"
team.Data <- getData[getData[, "Team"] == team.name,]
#ggtitle("title_name") <- add title
ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity" ) + ggtitle(team.name)
#ggtitle("title_name") <- add title
ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity",  ) + ggtitle(team.name) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#get the data of player in Cloud9
#https://stackoverflow.com/questions/5391124/select-rows-of-a-matrix-that-meet-a-condition
#how to extract rows that meet a condition (the website above)
team.name <- "TSM"
team.Data <- getData[getData[, "Team"] == team.name,]
#ggtitle("title_name") <- add title
ggplot( data = team.Data, aes(x = Name, y = Game.Played) ) + geom_bar( stat = "identity",  ) + ggtitle(team.name) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/大學/107上學期/資料科學與程式設計/107-1-R-data-analysis-course/week_3/hw_3/search_address_from_IP")
install.packages("ggmap")
install.packages("mapproj")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
version.block <- html_nodes(page.source, "#log_res")
source('~/.active-rstudio-document', echo=TRUE)
View(version.block)
#install.packages("rvest")
library(rvest)
page.source <- read_html("http://dir.twseo.org/ip-check.php")
version.block <- html_nodes(page.source, "#log_res")
head(version.block)
address <- html_text(version.block)
head(content)
#install.packages("rvest")
library(rvest)
page.source <- read_html("http://dir.twseo.org/ip-check.php")
version.block <- html_nodes(page.source, "div#log_res")
head(version.block)
address <- html_text(version.block)
head(address)
version.block <- html_nodes(page.source, "div#log_res.selectorgadget_selected")
head(version.block)
address <- html_text(version.block)
install.packages("devtools")
install.packages("RSelenium")
#ref : https://blog.gtwang.org/r/rselenium-r-selenium-browser-web-scraping-tutorial/
#install.packages("RSelenium")
library("RSelenium")
setwd("~/大學/107上學期/資料科學與程式設計/107-1-R-data-analysis-course/week_3/hw_3/search_address_from_IP")
library(httr)
web <- 'http://data.ntpc.gov.tw/od/zipfiledl?oid=54DDDC93-589C-4858-9C95-18B2046CC1FC&ft=zip,http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
result <- GET(web)
rm(list=ls(all.names = TRUE))
library(httr)
web <- 'http://data.ntpc.gov.tw/od/zipfiledl?oid=54DDDC93-589C-4858-9C95-18B2046CC1FC&ft=zip,http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
result <- GET(web)
rm(list=ls(all.names = TRUE))
library(httr)
web <- 'http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
result <- GET(web)
View(result)
library(httr)
web <- 'http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
result <- GET(web)
mode(result)
library(httr)
# web.pchome.1 <- ' https://ecshweb.pchome.com.tw/search/v3.3/all/results?q='
# search <- 'macbook'
# web.pchome.2 <- '&page=1&sort=rnk/dc'
# web <- paste(web.pchome.1, search, web.pchome.2, sep = "")
web <- 'https://ecshweb.pchome.com.tw/search/v3.3/all/results?q=macbook&page=1&sort=rnk/dc'
result <- GET(web)
mode(result)
rm(list=ls(all.names = TRUE))
library(httr)
web <- 'http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
result <- GET(web)
content(result)
mode(web)
result
rm(list=ls(all.names = TRUE))
library(jsonlite)
# The TPE Bike opendata json url
url <- 'http://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC;jsessionid=3D59D691A89C50D9BD6763C844C777CD?$format=json'
#Get it with jsonlite package
jsonData <- fromJSON(url, flatten = TRUE)
jsonData
rm(list=ls(all.names = TRUE))
library(jsonlite)
# The TPE Bike opendata json url
url <- 'http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
#Get it with jsonlite package
jsonData <- fromJSON(url, flatten = TRUE)
setwd("~/大學/107上學期/資料科學與程式設計/107-1-R-data-analysis-course/week_04")
#Write it into csv.
write.csv(file = 'test.csv', jsonData , fileEncoding = 'utf-8')
rm(list=ls(all.names = TRUE))
library(jsonlite)
# The TPE Bike opendata json url
url <- 'http://data.ntpc.gov.tw/od/data/api/54DDDC93-589C-4858-9C95-18B2046CC1FC;jsessionid=3D59D691A89C50D9BD6763C844C777CD?$format=json'
#Get it with jsonlite package
jsonData <- fromJSON(url, flatten = TRUE)
#Write it into csv.
write.csv(file = 'test.csv', jsonData , fileEncoding = 'utf-8')
rm(list=ls(all.names = TRUE))
library(jsonlite)
# The TPE Bike opendata json url
url <- 'http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000352-001'
#Get it with jsonlite package
jsonData <- fromJSON(url, flatten = TRUE)
#Write it into csv.
write.csv(file = 'test_ubike.csv', jsonData , fileEncoding = 'utf-8')
library(NLP)
install.packages(NLP)
install.packages('NLP')
install.packages("tm")
install.packages("jiebaRD")
install.packages("jiebaR")
install.packages("RColorBrewer")
install.packages("wordcloud")
setwd("~/大學/107上學期/資料科學與程式設計/107-1-R-data-analysis-course/week_04")
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- lapply(filename, readLines, encoding="UTF-8")
docs <- Corpus(VectorSource(files))
library(NLP)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- lapply(filename, readLines, encoding="UTF-8")
docs <- Corpus(VectorSource(files))
View(docs)
View(docs)
View(files)
View(files)
mode(docs)
#clean enviroment
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- lapply(filename, readLines, encoding="UTF-8")
docs <- Corpus(VectorSource(files))
#移除可能有問題的符號
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
mode(docs)
docs["result.records.sarea"]
files["result.records.sarea"]
View(docs)
#get data from selected file
files <- read.csv(filename, encoding="UTF-8")
View(files)
docs <- files$result.records.sarea
docs
View(files)
#
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
#
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
#
freqFrame = as.data.frame(table(unlist(docs)))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
View(freqFrame)
View(files)
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
View(freqFrame)
#
freqFrame = as.data.frame(table(docs))
par(family=("Heiti TC Light"))
#
freqFrame = as.data.frame(table(docs))
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
unlist(docs)
table(unlist(docs))
#
freqFrame = as.data.frame(table(unlist(docs)))
View(freqFrame)
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
#
freqFrame = as.data.frame(table(unlist(docs)))
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
#
freqFrame = as.data.frame(table(unlist(docs)))
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
View(freqFrame)
#clean enviroment
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- read.csv(filename, encoding="UTF-8")
docs <- files$result.records.sarea
#
freqFrame = as.data.frame(table(unlist(docs)))
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
rm(list=ls(all.names = TRUE))
#clean enviroment
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- read.csv(filename, encoding="UTF-8")
docs <- files$result.records.sarea
#clean enviroment
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- read.csv(filename, encoding="UTF-8")
#get data from selected file
files <- read.csv(filename)
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
setwd("~/大學/107上學期/資料科學與程式設計/107-1-R-data-analysis-course/week_04/course_4")
#get name of file
filename <- list.files(getwd(), pattern="*.csv")
#get data from selected file
files <- read.csv(filename)
docs <- files$result.records.sarea
#
freqFrame = as.data.frame(table(unlist(docs)))
par(family=("Heiti TC Light"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
View(freqFrame)
View(files)
View(freqFrame)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(1,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(3,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=4,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=200,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(words = freqFrame$Var1, freq = freqFrame$Freq,
min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = freqFrame$Var1, freq = freqFrame$Freq,
min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = freqFrame[1], freq = freqFrame$Freq,
min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
$Var1
freqFrame$Var1
par(family=("Heiti TC Light"))
wordcloud(words = freqFrame$Var1, freq = freqFrame$Freq,
min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = freqFrame$Var1, freq = freqFrame$Freq,
min.freq = 1, max.words= 1000,
random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=1000,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=1000,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=10,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=1,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=1000,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
freqFrame$Var1
freqFrame$Freq
wordcloud(freqFrame$Var1,freqFrame$Freq,
min.freq=1,max.words=1,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
freqFrame
freqFrame
clear
